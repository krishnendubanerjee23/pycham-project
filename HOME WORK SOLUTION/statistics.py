# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FlQovmfRcMp_c9SwgaUQzyqSZPFEJ5Oh
"""

import numpy.random as np
import seaborn as sns
import matplotlib.pyplot as plt
population_size = 1000000
population = np.rand(1000000)



number_of_samples = 10000
sample_means = np.rand(number_of_samples)
sample_size = 35

sample_means

import numpy 
c = np.rand(number_of_samples)
for i in range(0,number_of_samples):
 c = np.randint(1,population_size,sample_size)
 sample_means[i] = numpy.mean(c)

np.randint(1,population_size,sample_size)

sample_means.shape

population = np.rand(100000)

population

import matplotlib.pyplot as plt
plt.subplot(1,2,1)
plt.xticks(fontsize=14)
plt.yticks(fontsize=14)
sns.distplot(sample_means,bins=int(180/5),hist = True,kde = False)
plt.title('Histogram of Sample mea',fontsize=20)
plt.xlabel('Sample mean',fontsize=20)
plt.ylabel('Count',fontsize=20)
plt.subplot(1,2,2)
plt.xticks(fontsize=14)
plt.yticks(fontsize=14)
sns.distplot(sample_means,hist = False,kde = True)
plt.title('Density of Sample mean',fontsize=20)
plt.xlabel('Sample mean',fontsize=20)
plt.ylabel('Density',fontsize=20)
plt.subplots_adjust(bottom=0.1, right=2, top=0.9)

import seaborn as sns

df=sns.load_dataset('tips')

df.head()

df.corr("pearson")

sns.pairplot(df)

import numpy as np

np.cov(df['total_bill'],df['tip'])

np.cov(df['total_bill'])

np.cov(df['tip'])

import seaborn as sns

df=sns.load_dataset('tips')

sns.boxplot(df['total_bill'])

sns.violinplot(df['total_bill'])

import numpy as np

age=[2,3,4,5,6,2,2,4,65,7,8,4,3,3,6,7,4,4,5,5,5,5,6,7,5,47,5,643,3,65,8,5]

percentile_25=np.percentile(age,[25])
percentile_75=np.percentile(age,[75])

IQR=percentile_75-percentile_25

lower_fence=percentile_25-1.5*(IQR)
higher_fence=percentile_75+1.5*(IQR)

lower_fence,higher_fence

np.mean([12,3,4,5,6])

np.median([1,2,2,2,3,3])

from statistics import mode

mode([1,2,2,2,3,3])

sns.histplot(age)

np.mean([1,2])

import seaborn as sns
sns.set_theme(style="darkgrid")
titanic = sns.load_dataset("titanic")
ax = sns.countplot(x="class", data=titanic)

